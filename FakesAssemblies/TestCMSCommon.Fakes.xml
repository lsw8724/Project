<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestCMSCommon.Fakes</name>
    </assembly>
    <members>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimMeasurement">
            <summary>Shim type of TestCMSCommon.DataBase.Measurement</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimMeasurement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimMeasurement.#ctor(TestCMSCommon.DataBase.Measurement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimMeasurement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.AllInstances.DeleteDataInt32">
            <summary>Sets the shim of Measurement.DeleteData(Int32 idx)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.AllInstances.GetAllMeasure">
            <summary>Sets the shim of Measurement.GetAllMeasure()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.AllInstances.GetDataFromChidInt32">
            <summary>Sets the shim of Measurement.GetDataFromChid(Int32 chid)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.AllInstances.GetDataInt32">
            <summary>Sets the shim of Measurement.GetData(Int32 idx)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.AllInstances.GetResultSqlCommand">
            <summary>Sets the shim of Measurement.GetResult(SqlCommand cmd)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.AllInstances.InsertDataInt32Int32Int32Int32Int32Int32Int32Int32">
            <summary>Sets the shim of Measurement.InsertData(Int32 id, Int32 type, Int32 chid, Int32 l, Int32 h, Int32 i1, Int32 i2, Int32 i3)</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimMeasurement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimMeasurement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.ConstructorSqlConnection">
            <summary>Sets the shim of Measurement.Measurement(SqlConnection conn)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.DeleteDataInt32">
            <summary>Sets the shim of Measurement.DeleteData(Int32 idx)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.GetAllMeasure">
            <summary>Sets the shim of Measurement.GetAllMeasure()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.GetDataFromChidInt32">
            <summary>Sets the shim of Measurement.GetDataFromChid(Int32 chid)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.GetDataInt32">
            <summary>Sets the shim of Measurement.GetData(Int32 idx)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.GetResultSqlCommand">
            <summary>Sets the shim of Measurement.GetResult(SqlCommand cmd)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurement.InsertDataInt32Int32Int32Int32Int32Int32Int32Int32">
            <summary>Sets the shim of Measurement.InsertData(Int32 id, Int32 type, Int32 chid, Int32 l, Int32 h, Int32 i1, Int32 i2, Int32 i3)</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimMeasurementRow">
            <summary>Shim type of TestCMSCommon.DataBase.MeasurementRow</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimMeasurementRow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimMeasurementRow.#ctor(TestCMSCommon.DataBase.MeasurementRow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimMeasurementRow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimMeasurementRow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimMeasurementRow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurementRow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimMeasurementRow.ConstructorObjectObjectObjectObjectObjectObjectObjectObject">
            <summary>Sets the shim of MeasurementRow.MeasurementRow(Object id, Object type, Object chid, Object l, Object h, Object i1, Object i2, Object i3)</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimReceiver">
            <summary>Shim type of TestCMSCommon.DataBase.Receiver</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimReceiver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimReceiver.#ctor(TestCMSCommon.DataBase.Receiver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimReceiver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimReceiver.AllInstances.DeleteDataInt32">
            <summary>Sets the shim of Receiver.DeleteData(Int32 idx)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimReceiver.AllInstances.GetAllReceiver">
            <summary>Sets the shim of Receiver.GetAllReceiver()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimReceiver.AllInstances.GetResultSqlCommand">
            <summary>Sets the shim of Receiver.GetResult(SqlCommand cmd)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimReceiver.AllInstances.InsertDataInt32Int32StringStringInt32Int32">
            <summary>Sets the shim of Receiver.InsertData(Int32 id, Int32 type, String ip, String path, Int32 port, Int32 serializer)</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimReceiver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimReceiver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimReceiver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimReceiver.ConstructorSqlConnection">
            <summary>Sets the shim of Receiver.Receiver(SqlConnection conn)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimReceiver.DeleteDataInt32">
            <summary>Sets the shim of Receiver.DeleteData(Int32 idx)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimReceiver.GetAllReceiver">
            <summary>Sets the shim of Receiver.GetAllReceiver()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimReceiver.GetResultSqlCommand">
            <summary>Sets the shim of Receiver.GetResult(SqlCommand cmd)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimReceiver.InsertDataInt32Int32StringStringInt32Int32">
            <summary>Sets the shim of Receiver.InsertData(Int32 id, Int32 type, String ip, String path, Int32 port, Int32 serializer)</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimReceiverRow">
            <summary>Shim type of TestCMSCommon.DataBase.ReceiverRow</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimReceiverRow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimReceiverRow.#ctor(TestCMSCommon.DataBase.ReceiverRow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimReceiverRow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimReceiverRow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimReceiverRow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimReceiverRow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimReceiverRow.ConstructorObjectObjectObjectObjectObjectObject">
            <summary>Sets the shim of ReceiverRow.ReceiverRow(Object id, Object type, Object ip, Object path, Object port, Object serializer)</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimSQLRepository">
            <summary>Shim type of TestCMSCommon.DataBase.SQLRepository</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.CheckExistDatabase">
            <summary>Sets the shim of SQLRepository.CheckExistDatabase()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.CheckExistTableString">
            <summary>Sets the shim of SQLRepository.CheckExistTable(String tableName)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.Close">
            <summary>Sets the shim of SQLRepository.Close()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.CreateDatabase">
            <summary>Sets the shim of SQLRepository.CreateDatabase()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.CreateMeasurementTable">
            <summary>Sets the shim of SQLRepository.CreateMeasurementTable()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.CreateReceiverTable">
            <summary>Sets the shim of SQLRepository.CreateReceiverTable()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.CreateTrendDataTable">
            <summary>Sets the shim of SQLRepository.CreateTrendDataTable()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.Init">
            <summary>Sets the shim of SQLRepository.Init()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.MeasurementGet">
            <summary>Sets the shim of SQLRepository.get_Measurement()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.OnSQLInfoMessageObjectSqlInfoMessageEventArgs">
            <summary>Sets the shim of SQLRepository.OnSQLInfoMessage(Object sender, SqlInfoMessageEventArgs e)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.ReceiverGet">
            <summary>Sets the shim of SQLRepository.get_Receiver()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.StaticConstructor">
            <summary>Sets the shim of SQLRepository.SQLRepository()</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimSQLRepository.TrendDataGet">
            <summary>Sets the shim of SQLRepository.get_TrendData()</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimTrendData">
            <summary>Shim type of TestCMSCommon.DataBase.TrendData</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimTrendData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimTrendData.#ctor(TestCMSCommon.DataBase.TrendData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimTrendData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendData.AllInstances.DeleteDataInt32">
            <summary>Sets the shim of TrendData.DeleteData(Int32 idx)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendData.AllInstances.GetDataInt32">
            <summary>Sets the shim of TrendData.GetData(Int32 measureId)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendData.AllInstances.GetDataRangeDateTimeDateTime">
            <summary>Sets the shim of TrendData.GetDataRange(DateTime start, DateTime end)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendData.AllInstances.GetResultSqlCommand">
            <summary>Sets the shim of TrendData.GetResult(SqlCommand cmd)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendData.AllInstances.InsertDataDateTimeInt32Single">
            <summary>Sets the shim of TrendData.InsertData(DateTime timeStamp, Int32 measureId, Single scalar)</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimTrendData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimTrendData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendData.ConstructorSqlConnection">
            <summary>Sets the shim of TrendData.TrendData(SqlConnection conn)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendData.DeleteDataInt32">
            <summary>Sets the shim of TrendData.DeleteData(Int32 idx)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendData.GetDataInt32">
            <summary>Sets the shim of TrendData.GetData(Int32 measureId)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendData.GetDataRangeDateTimeDateTime">
            <summary>Sets the shim of TrendData.GetDataRange(DateTime start, DateTime end)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendData.GetResultSqlCommand">
            <summary>Sets the shim of TrendData.GetResult(SqlCommand cmd)</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendData.InsertDataDateTimeInt32Single">
            <summary>Sets the shim of TrendData.InsertData(DateTime timeStamp, Int32 measureId, Single scalar)</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimTrendDataRow">
            <summary>Shim type of TestCMSCommon.DataBase.TrendDataRow</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimTrendDataRow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimTrendDataRow.#ctor(TestCMSCommon.DataBase.TrendDataRow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.ShimTrendDataRow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimTrendDataRow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.ShimTrendDataRow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendDataRow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.ShimTrendDataRow.ConstructorObjectObjectObjectObject">
            <summary>Sets the shim of TrendDataRow.TrendDataRow(Object idx, Object timeStamp, Object measureId, Object scalar)</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.StubMeasurement">
            <summary>Stub type of TestCMSCommon.DataBase.Measurement</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.StubMeasurement.#ctor(System.Data.SqlClient.SqlConnection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubMeasurement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.StubMeasurement.InitializeStub">
            <summary>Initializes a new instance of type StubMeasurement</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubMeasurement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubMeasurement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.StubMeasurementRow">
            <summary>Stub type of TestCMSCommon.DataBase.MeasurementRow</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.StubMeasurementRow.#ctor(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubMeasurementRow.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.StubMeasurementRow.InitializeStub">
            <summary>Initializes a new instance of type StubMeasurementRow</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubMeasurementRow.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubMeasurementRow.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.StubReceiver">
            <summary>Stub type of TestCMSCommon.DataBase.Receiver</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.StubReceiver.#ctor(System.Data.SqlClient.SqlConnection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubReceiver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.StubReceiver.InitializeStub">
            <summary>Initializes a new instance of type StubReceiver</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubReceiver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubReceiver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.StubReceiverRow">
            <summary>Stub type of TestCMSCommon.DataBase.ReceiverRow</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.StubReceiverRow.#ctor(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubReceiverRow.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.StubReceiverRow.InitializeStub">
            <summary>Initializes a new instance of type StubReceiverRow</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubReceiverRow.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubReceiverRow.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.StubTrendData">
            <summary>Stub type of TestCMSCommon.DataBase.TrendData</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.StubTrendData.#ctor(System.Data.SqlClient.SqlConnection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubTrendData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.StubTrendData.InitializeStub">
            <summary>Initializes a new instance of type StubTrendData</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubTrendData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubTrendData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:TestCMSCommon.DataBase.Fakes.StubTrendDataRow">
            <summary>Stub type of TestCMSCommon.DataBase.TrendDataRow</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.StubTrendDataRow.#ctor(System.Object,System.Object,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubTrendDataRow.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:TestCMSCommon.DataBase.Fakes.StubTrendDataRow.InitializeStub">
            <summary>Initializes a new instance of type StubTrendDataRow</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubTrendDataRow.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:TestCMSCommon.DataBase.Fakes.StubTrendDataRow.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
